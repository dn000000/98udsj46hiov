"""
@file telegram_notifier.py
@brief –ú–æ–¥—É–ª—å –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —á–µ—Ä–µ–∑ Telegram.

@details
–≠—Ç–æ—Ç –º–æ–¥—É–ª—å –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
–æ —Å–æ–±—ã—Ç–∏—è—Ö –ø—Ä–æ–µ–∫—Ç–∞ —á–µ—Ä–µ–∑ Telegram –±–æ—Ç–∞.
"""

import os
import logging
import requests
import json
import sys
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –∫–æ—Ä–Ω–µ–≤–æ–º—É –∫–∞—Ç–∞–ª–æ–≥—É –ø—Ä–æ–µ–∫—Ç–∞
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))

# –ü—Ä–æ–±—É–µ–º –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –º–æ–¥—É–ª–∏ —á–µ—Ä–µ–∑ —Ä–∞–∑–Ω—ã–µ –ø—É—Ç–∏
try:
    from pathfinder.config.config import Config, Environment
except ImportError:
    try:
        from config.config import Config, Environment
    except ImportError:
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã –±–µ–∑ –º–æ–¥—É–ª—è config
        class Environment:
            DEVELOPMENT = "development"
            TESTING = "testing"
            PRODUCTION = "production"

class TelegramNotifier:
    """
    @brief –ö–ª–∞—Å—Å –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —á–µ—Ä–µ–∑ Telegram.
    
    @details
    –ö–ª–∞—Å—Å TelegramNotifier –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –º–µ—Ç–æ–¥—ã –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    –æ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å–æ–±—ã—Ç–∏—è—Ö –ø—Ä–æ–µ–∫—Ç–∞ —á–µ—Ä–µ–∑ Telegram –±–æ—Ç–∞.
    """
    
    def __init__(self, bot_token=None, chat_id=None):
        """
        @brief –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—ä–µ–∫—Ç–∞ TelegramNotifier.
        
        @param bot_token –¢–æ–∫–µ–Ω Telegram –±–æ—Ç–∞. –ï—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω, –±–µ—Ä–µ—Ç—Å—è –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è TELEGRAM_BOT_TOKEN.
        @param chat_id ID —á–∞—Ç–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π. –ï—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω, –±–µ—Ä–µ—Ç—Å—è –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è TELEGRAM_CHAT_ID.
        
        @code
        # –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
        from pathfinder.notifications.telegram_notifier import TelegramNotifier
        
        # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        notifier = TelegramNotifier()
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
        notifier.send_error_notification("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤ –º–æ–¥—É–ª–µ X", "–ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –æ—à–∏–±–∫–∏")
        @endcode
        """
        self.bot_token = bot_token or os.environ.get("TELEGRAM_BOT_TOKEN")
        self.chat_id = chat_id or os.environ.get("TELEGRAM_CHAT_ID")
        
        if not self.bot_token or not self.chat_id:
            logging.warning("–ù–µ —É–∫–∞–∑–∞–Ω—ã —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –∏–ª–∏ ID —á–∞—Ç–∞. –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –Ω–µ –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è.")
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        self.config = Config()
    
    def send_message(self, message):
        """
        @brief –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram.
        
        @param message –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è.
        
        @return True, –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ, –∏–Ω–∞—á–µ False.
        """
        if not self.bot_token or not self.chat_id:
            logging.info(f"–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ä–µ–∂–∏–º: —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –±—ã–ª–æ –±—ã –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram: {message}")
            return True
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤–∫–ª—é—á–µ–Ω—ã –ª–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        if not self.config.get("error_reporting.send_notifications", False):
            logging.info("–û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ—Ç–∫–ª—é—á–µ–Ω–∞ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏.")
            return False
        
        try:
            url = f"https://api.telegram.org/bot{self.bot_token}/sendMessage"
            data = {
                "chat_id": self.chat_id,
                "text": message,
                "parse_mode": "Markdown"
            }
            
            response = requests.post(url, data=data)
            
            if response.status_code == 200:
                logging.info("–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram.")
                return True
            else:
                logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram: {response.text}")
                return False
        except Exception as e:
            logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram: {e}")
            return False
    
    def send_error_notification(self, title, description, error_context=None):
        """
        @brief –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ.
        
        @param title –ó–∞–≥–æ–ª–æ–≤–æ–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è.
        @param description –û–ø–∏—Å–∞–Ω–∏–µ –æ—à–∏–±–∫–∏.
        @param error_context –ö–æ–Ω—Ç–µ–∫—Å—Ç –æ—à–∏–±–∫–∏ (–æ–±—ä–µ–∫—Ç ErrorContext).
        
        @return True, –µ—Å–ª–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ, –∏–Ω–∞—á–µ False.
        """
        message = f"üî¥ *–û–®–ò–ë–ö–ê: {title}*\n\n"
        message += f"üìù *–û–ø–∏—Å–∞–Ω–∏–µ:* {description}\n"
        message += f"üïí *–í—Ä–µ–º—è:* {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}\n"
        
        if error_context:
            message += f"üìã *–ö–æ–Ω—Ç–µ–∫—Å—Ç:*\n"
            message += f"  - –ú–æ–¥—É–ª—å: {error_context.module}\n"
            message += f"  - –§—É–Ω–∫—Ü–∏—è: {error_context.function}\n"
            message += f"  - –°—Ç—Ä–æ–∫–∞: {error_context.line}\n"
            
            if error_context.variables:
                message += f"  - –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:\n"
                for key, value in error_context.variables.items():
                    message += f"    - {key}: {value}\n"
        
        message += f"\nüåç *–û–∫—Ä—É–∂–µ–Ω–∏–µ:* {self.config.get_environment().value}"
        
        return self.send_message(message)
    
    def send_warning_notification(self, title, description):
        """
        @brief –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–∏.
        
        @param title –ó–∞–≥–æ–ª–æ–≤–æ–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è.
        @param description –û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è.
        
        @return True, –µ—Å–ª–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ, –∏–Ω–∞—á–µ False.
        """
        message = f"üü° *–ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï: {title}*\n\n"
        message += f"üìù *–û–ø–∏—Å–∞–Ω–∏–µ:* {description}\n"
        message += f"üïí *–í—Ä–µ–º—è:* {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}\n"
        message += f"\nüåç *–û–∫—Ä—É–∂–µ–Ω–∏–µ:* {self.config.get_environment().value}"
        
        return self.send_message(message)
    
    def send_info_notification(self, title, description):
        """
        @brief –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ.
        
        @param title –ó–∞–≥–æ–ª–æ–≤–æ–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è.
        @param description –û–ø–∏—Å–∞–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.
        
        @return True, –µ—Å–ª–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ, –∏–Ω–∞—á–µ False.
        """
        message = f"üîµ *–ò–ù–§–û–†–ú–ê–¶–ò–Ø: {title}*\n\n"
        message += f"üìù *–û–ø–∏—Å–∞–Ω–∏–µ:* {description}\n"
        message += f"üïí *–í—Ä–µ–º—è:* {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}\n"
        message += f"\nüåç *–û–∫—Ä—É–∂–µ–Ω–∏–µ:* {self.config.get_environment().value}"
        
        return self.send_message(message)
    
    def send_deployment_notification(self, environment, status, version=None):
        """
        @brief –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –¥–µ–ø–ª–æ–µ.
        
        @param environment –û–∫—Ä—É–∂–µ–Ω–∏–µ, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –¥–µ–ø–ª–æ–π.
        @param status –°—Ç–∞—Ç—É—Å –¥–µ–ø–ª–æ—è (success, failure).
        @param version –í–µ—Ä—Å–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
        
        @return True, –µ—Å–ª–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ, –∏–Ω–∞—á–µ False.
        """
        if status == "success":
            message = f"üü¢ *–î–ï–ü–õ–û–ô –£–°–ü–ï–®–ï–ù*\n\n"
        else:
            message = f"üî¥ *–î–ï–ü–õ–û–ô –ù–ï–£–î–ê–ß–ï–ù*\n\n"
            
        message += f"üåç *–û–∫—Ä—É–∂–µ–Ω–∏–µ:* {environment}\n"
        
        if version:
            message += f"üì¶ *–í–µ—Ä—Å–∏—è:* {version}\n"
            
        message += f"üïí *–í—Ä–µ–º—è:* {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}"
        
        return self.send_message(message) 